digraph G {
  label="VACron AST (idx=0)"; labelloc=top; rankdir=TB; node [shape=box, fontsize=10];
  0 [label="0: translation_unit"];
  1 [label="1: function_definition"];
  2 [label="2: storage_class_specifier"];
  3 [label="3: static"];
  4 [label="4: type_identifier"];
  5 [label="5: ERROR"];
  6 [label="6: identifier"];
  7 [label="7: function_declarator"];
  8 [label="8: identifier"];
  9 [label="9: parameter_list"];
  10 [label="10: ("];
  11 [label="11: parameter_declaration"];
  12 [label="12: type_identifier"];
  13 [label="13: pointer_declarator"];
  14 [label="14: *"];
  15 [label="15: identifier"];
  16 [label="16: )"];
  17 [label="17: compound_statement"];
  18 [label="18: {"];
  19 [label="19: declaration"];
  20 [label="20: type_identifier"];
  21 [label="21: init_declarator"];
  22 [label="22: pointer_declarator"];
  23 [label="23: *"];
  24 [label="24: identifier"];
  25 [label="25: ="];
  26 [label="26: field_expression"];
  27 [label="27: identifier"];
  28 [label="28: ->"];
  29 [label="29: field_identifier"];
  30 [label="30: ;"];
  31 [label="31: declaration"];
  32 [label="32: struct_specifier"];
  33 [label="33: struct"];
  34 [label="34: type_identifier"];
  35 [label="35: init_declarator"];
  36 [label="36: pointer_declarator"];
  37 [label="37: *"];
  38 [label="38: identifier"];
  39 [label="39: ="];
  40 [label="40: pointer_expression"];
  41 [label="41: &"];
  42 [label="42: field_expression"];
  43 [label="43: identifier"];
  44 [label="44: ->"];
  45 [label="45: field_identifier"];
  46 [label="46: ;"];
  47 [label="47: declaration"];
  48 [label="48: type_identifier"];
  49 [label="49: identifier"];
  50 [label="50: ;"];
  51 [label="51: declaration"];
  52 [label="52: primitive_type"];
  53 [label="53: identifier"];
  54 [label="54: ;"];
  55 [label="55: expression_statement"];
  56 [label="56: assignment_expression"];
  57 [label="57: field_expression"];
  58 [label="58: identifier"];
  59 [label="59: ->"];
  60 [label="60: field_identifier"];
  61 [label="61: ="];
  62 [label="62: number_literal"];
  63 [label="63: ;"];
  64 [label="64: comment"];
  65 [label="65: if_statement"];
  66 [label="66: if"];
  67 [label="67: parenthesized_expression"];
  68 [label="68: ("];
  69 [label="69: unary_expression"];
  70 [label="70: !"];
  71 [label="71: field_expression"];
  72 [label="72: identifier"];
  73 [label="73: ."];
  74 [label="74: field_identifier"];
  75 [label="75: )"];
  76 [label="76: compound_statement"];
  77 [label="77: {"];
  78 [label="78: if_statement"];
  79 [label="79: if"];
  80 [label="80: parenthesized_expression"];
  81 [label="81: ("];
  82 [label="82: binary_expression"];
  83 [label="83: identifier"];
  84 [label="84: <"];
  85 [label="85: identifier"];
  86 [label="86: )"];
  87 [label="87: expression_statement"];
  88 [label="88: assignment_expression"];
  89 [label="89: field_expression"];
  90 [label="90: identifier"];
  91 [label="91: ."];
  92 [label="92: field_identifier"];
  93 [label="93: ="];
  94 [label="94: identifier"];
  95 [label="95: ;"];
  96 [label="96: else_clause"];
  97 [label="97: else"];
  98 [label="98: expression_statement"];
  99 [label="99: assignment_expression"];
  100 [label="100: field_expression"];
  101 [label="101: identifier"];
  102 [label="102: ."];
  103 [label="103: field_identifier"];
  104 [label="104: ="];
  105 [label="105: identifier"];
  106 [label="106: ;"];
  107 [label="107: }"];
  108 [label="108: comment"];
  109 [label="109: expression_statement"];
  110 [label="110: call_expression"];
  111 [label="111: identifier"];
  112 [label="112: argument_list"];
  113 [label="113: ("];
  114 [label="114: identifier"];
  115 [label="115: ,"];
  116 [label="116: number_literal"];
  117 [label="117: ,"];
  118 [label="118: sizeof_expression"];
  119 [label="119: sizeof"];
  0 -> 1;
  1 -> 2;
  2 -> 3;
  1 -> 4;
  1 -> 5;
  5 -> 6;
  1 -> 7;
  7 -> 8;
  7 -> 9;
  9 -> 10;
  9 -> 11;
  11 -> 12;
  11 -> 13;
  13 -> 14;
  13 -> 15;
  9 -> 16;
  1 -> 17;
  17 -> 18;
  17 -> 19;
  19 -> 20;
  19 -> 21;
  21 -> 22;
  22 -> 23;
  22 -> 24;
  21 -> 25;
  21 -> 26;
  26 -> 27;
  26 -> 28;
  26 -> 29;
  19 -> 30;
  17 -> 31;
  31 -> 32;
  32 -> 33;
  32 -> 34;
  31 -> 35;
  35 -> 36;
  36 -> 37;
  36 -> 38;
  35 -> 39;
  35 -> 40;
  40 -> 41;
  40 -> 42;
  42 -> 43;
  42 -> 44;
  42 -> 45;
  31 -> 46;
  17 -> 47;
  47 -> 48;
  47 -> 49;
  47 -> 50;
  17 -> 51;
  51 -> 52;
  51 -> 53;
  51 -> 54;
  17 -> 55;
  55 -> 56;
  56 -> 57;
  57 -> 58;
  57 -> 59;
  57 -> 60;
  56 -> 61;
  56 -> 62;
  55 -> 63;
  17 -> 64;
  17 -> 65;
  65 -> 66;
  65 -> 67;
  67 -> 68;
  67 -> 69;
  69 -> 70;
  69 -> 71;
  71 -> 72;
  71 -> 73;
  71 -> 74;
  67 -> 75;
  65 -> 76;
  76 -> 77;
  76 -> 78;
  78 -> 79;
  78 -> 80;
  80 -> 81;
  80 -> 82;
  82 -> 83;
  82 -> 84;
  82 -> 85;
  80 -> 86;
  78 -> 87;
  87 -> 88;
  88 -> 89;
  89 -> 90;
  89 -> 91;
  89 -> 92;
  88 -> 93;
  88 -> 94;
  87 -> 95;
  78 -> 96;
  96 -> 97;
  96 -> 98;
  98 -> 99;
  99 -> 100;
  100 -> 101;
  100 -> 102;
  100 -> 103;
  99 -> 104;
  99 -> 105;
  98 -> 106;
  76 -> 107;
  17 -> 108;
  17 -> 109;
  109 -> 110;
  110 -> 111;
  110 -> 112;
  112 -> 113;
  112 -> 114;
  112 -> 115;
  112 -> 116;
  112 -> 117;
  112 -> 118;
  118 -> 119;
}